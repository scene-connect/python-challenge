import Head from "next/head";

import { useEffect, useState } from "react";
import Chart from "chart.js/auto";
import { Bar } from "react-chartjs-2";
import { registerables } from "chart.js";
Chart.register(...registerables);

export default function Home() {
	const uuid = "1e0e7511-9e40-4b13-8c52-4f9c26c41c55"; // TODO: hard-coded for the demo-test - make this dynamic
	const [energyRunData, setEnergyRunData] = useState();
	useEffect(() => {		
		fetch("http://localhost:8000/api/energy/"+encodeURIComponent(uuid))
			.then(response => {
				console.log(response);
				return response.json();
			})
			.then(data => {
				console.log(data);
				setEnergyRunData(data);
			})
			.catch(error => console.error('Error:', error));
	}, []);

	// compose a chart from the energy run data
	const metric = "operating_cost";
	let chartData;
	if (energyRunData) {
		const monthlyEnergyTotals = energyRunData.energy_run_results.baseline_energy_profile.monthly_energy_total;
		// console.log(monthlyEnergyTotals);
		// Convert the {month: {metric: value}} to an array of values
		const operatingCosts = Object.keys(monthlyEnergyTotals).map(month => {
			return monthlyEnergyTotals[month][metric];
		});
		const scenarioProfile = energyRunData.energy_run_results.improvement_plan[0].energy_profile;		
		const scenarioOperatingCosts = Object.keys(scenarioProfile.monthly_energy_total).map(month => {
			return scenarioProfile.monthly_energy_total[month][metric];
		});
		chartData = {
			labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
			datasets: [{
				label: "Energy Costs: Today",
				data: operatingCosts
			},
			{
				label: "Energy Costs: Scenario",
				data: scenarioOperatingCosts
			}]
		}
	}

	// e.g. if we want to change the colours
	let chartOptions = {

	};

  return (
    <>
      <Head>
        <title>Energy Chart Demo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />        
      </Head>
      <div>
        <main>
          <h1>Energy Chart Demo</h1>
			{chartData && <Bar data={chartData} options={chartOptions} />}
			{!chartData && <p>Loading data...</p>}		
        </main>
      </div>
    </>
  );
}
